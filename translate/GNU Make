GNU Make
گنو میک یک ابزار است که تولید یا ایجاد فایل‌های اجرایی و دیگرفایل‌های یک برنامه از سورس کد را کنترل می‌کند.

Make gets its knowledge of how to build your program from a file called the makefile, which lists each of the non-source files and how to compute it from other files. When you write a program, you should write a makefile for it, so that it is possible to use Make to build and install the program.

Capabilities of Make
Make enables the end user to build and install your package without knowing the details of how that is done -- because these details are recorded in the makefile that you supply.
Make figures out automatically which files it needs to update, based on which source files have changed. It also automatically determines the proper order for updating files, in case one non-source file depends on another non-source file.
As a result, if you change a few source files and then run Make, it does not need to recompile all of your program. It updates only those non-source files that depend directly or indirectly on the source files that you changed.

Make is not limited to any particular language. For each non-source file in the program, the makefile specifies the shell commands to compute it. These shell commands can run a compiler to produce an object file, the linker to produce an executable, ar to update a library, or TeX or Makeinfo to format documentation.
Make is not limited to building a package. You can also use Make to control installing or deinstalling a package, generate tags tables for it, or anything else you want to do often enough to make it worth while writing down how to do it.
Make Rules and Targets
A rule in the makefile tells Make how to execute a series of commands in order to build a target file from source files. It also specifies a list of dependencies of the target file. This list should include all files (whether source files or other targets) which are used as inputs to the commands in the rule.

Here is what a simple rule looks like:

target:   dependencies ...
          commands
          ...
When you run Make, you can specify particular targets to update; otherwise, Make updates the first target listed in the makefile. Of course, any other target files needed as input for generating these targets must be updated first.

Make uses the makefile to figure out which target files ought to be brought up to date, and then determines which of them actually need to be updated. If a target file is newer than all of its dependencies, then it is already up to date, and it does not need to be regenerated. The other target files do need to be updated, but in the right order: each target file must be regenerated before it is used in regenerating other targets.

Advantages of GNU Make
GNU Make has many powerful features for use in makefiles, beyond what other Make versions have. It can also regenerate, use, and then delete intermediate files which need not be saved.

GNU Make also has a few simple features that are very convenient. For example, the -o file option which says ``pretend that source file file has not changed, even though it has changed.'' This is extremely useful when you add a new macro to a header file. Most versions of Make will assume they must therefore recompile all the source files that use the header file; but GNU Make gives you a way to avoid the recompilation, in the case where you know your change to the header file does not require it.

However, the most important difference between GNU Make and most versions of Make is that GNU Make is free software.


فایل های Make و قرارداد

ما قرارداد های توسعه بافته ای  داریم برای چگونه نوشتن فایل های Make که همه ی  پکیج های GNU باید دنبال شوند. ایده ی خوبی است دنبال کردن این قرار داد ها در برنامه شما حتی اگر شما نمی خواهید ان نرم افزار GNU باشد بنابراین ان کاربرها قادر خواهند بود تا پکیج شما را بیلد کنند درست مثل بقیه پکیج های دیگر و احتیاچ نجواهد داشت تا هر چیزخاصی را قبل از انجام دادن بیاموزد.


این قرارداد ها در بخش Makefile conventions از استاندارد های کدینگ GNU پیدا شده اند

دانلود کردن Make

Make میتواند در سرور اصلی GNU ftp : http://ftp.gnu.org/gnu/make/ (via HTTP) و ftp://ftp.gnu.org/gnu/make/ (via FTP) پیدا شود. همچنین میتواند در GNU mirrors یافت شود.لطفا از mirror استفاده کنید اگر ممکن است.

مستند سازی

مستند سازی برای make بصورت انلاین در دسترس است همانطوری که برای بیشتر نرم افزار های GNU در دسترس است. ممکن است شما اطلاعات بیشتری درباره ی make بوسیله ی اجرای اطلاعات make یا man make یا بوسیله ی نکاه کردن به at /usr/share/doc/make/, /usr/local/doc/make/ یا دایرکتوری های مشابه در سیستم سما متوجه بشوید. یک خلاصه ی مختصر در دسترس است با اجرای دستور make --help 

لیست های پستی 

 make لیست های پستی زیر را دارد:

bug-make استفاده میشود برای بحث روی بیشتر جنبه های make و شامل توسعه و افزایش درخواست ها همچنین گزارش باگ ها میشود

help-make برای کمک به کار عمومی و گفتگو است

اعلامیه درباره ی make و بیشتر نرم افزار GNU هایی که ساخته میشوند در info-gnu.(آرشیو)

گزارش های امنیتی که نباید فورا عمومی ساخته بشوند میتوانند مستقیما به نگهدارنده فرستاده شوند.

درگیرشدن

توسعه make و GNU به طور کلی یک تاثیر داوظلبانه است و شما میتوانید مشارکت کنید .برای اظلاعات لطفا چگونه به GNU کمک کردن را بخوانید. اگر شما مایلید که درگیر شوید ایده ی خوبی است که در گفتگو ی لیست های پستی عضو شوید.(بالا را بخوانید)

انتشار آزمایشی

تلاش برای آخرین انتشار آزمایشی (وقتی در دسترس است) همیشه قدردانی شونده است.انتشار آرمایشی make  میتواند در http://alpha.gnu.org/gnu/make/ (via HTTP) و ftp://alpha.gnu.org/gnu/make/ (via FTP).
پیدا شود

توسعه

برای توسعه منابع و مسله یاب ها  و دیگر اطلاعات لطفا صفحه پروژه make در savannah.gnu.org. ببینید.

ترچمه make 

برای ترجمه ی پیام های make در زبان های دیگر لطفا صفحه پروژه ترجمه برای  make را ببینید. اگر یک ترجمه جدید از رشته های پیام  دارید یا به رسته های فعلی به روز رسانی میشود لطفا تغییرات ساخته شده در این مخزن را داشته باشید. تنها ترجمه ها از این سایت در make ادغام خواهد شد. برای اطلاعات بیشتر پروژه ترجمه را ببینید. 


نگه دارنده

make در حال حاضر بوسیله پاول اسمیت نگهداری شده است. لطفا از لیست های پستی برای ارتباط استفاده کنید

مجوز

make نرم افزار آزاد است . شما میتوانید دوباره ان را توزیع کنید ویا تغییر بدهید تحت شرایط لایسنس عمومی GNU که منتشر شده بوسیله ی بنیاد نرم افزار آزاد یا نسخه 3 لایسنس یا به دلخواه شما هر نسخه ی بعدی
